name: Publish Package

on:
  push:
    branches:
    - 'github-actions'
    paths-ignore:
    - 'docs/**'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:

  publish:
    runs-on: 'windows-latest'

    steps:
    - uses: actions/checkout@v1

    - name: Install MySQL 8.0.18
      run: |
        mkdir mysql
        Invoke-WebRequest -Uri https://cdn.mysql.com/archives/mysql-installer/mysql-installer-community-8.0.18.0.msi -OutFile "$(Get-Location)\mysql\mysql.msi"
        msiexec /q /log install.txt /i "$(Get-Location)\mysql\mysql.msi" datadir="$(Get-Location)\mysql" installdir="$(Get-Location)\mysql"

    - name: Configure MySQL Server
      run: |
        "C:\Program Files\MySQL\MySQL Server 8.0\bin\mysql" -uroot -ptest -e "SET GLOBAL local_infile=1; SET GLOBAL log_bin_trust_function_creators=1;"
        "C:\Program Files\MySQL\MySQL Server 8.0\bin\mysql" -uroot -ptest < .\.ci\server\init.sql
        "C:\Program Files\MySQL\MySQL Server 8.0\bin\mysql" -uroot -ptest < .\.ci\server\init_sha256.sql
        "C:\Program Files\MySQL\MySQL Server 8.0\bin\mysql" -uroot -ptest < .\.ci\server\init_caching_sha2.sql

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Unit Tests
      run: dotnet test --configuration Release tests\MySqlConnector.Tests --no-build --no-restore

    - name: Conformance Tests
      run: dotnet test --configuration Release tests\Conformance.Tests --no-build --no-restore
      env:
        CONNECTION_STRING: "Server=localhost;Port=3306;User Id=root;Password=test;SSL Mode=None"

    - name: Pack
      run: dotnet pack --configuration Release --no-build --no-restore --version-suffix $(Get-Date -Format "'preview'yyyyMMddHHmmss'+${{ github.sha }}'")

    - name: Install NuGet
      run: choco install nuget.commandline

    - name: Add NuGet source
      run: nuget sources Add -Name "GPR" -Source "https://nuget.pkg.github.com/mysql-net/index.json" -UserName bgrainger -Password ${{ secrets.GITHUB_TOKEN }}

    - name: Publish packages
      run: |
        $files = Get-ChildItem -Path src -Filter *.nupkg -Recurse
        foreach ($file in $files) {
          nuget push $file -Source GPR
        }
