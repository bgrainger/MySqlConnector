variables:
  DotNetCoreSdkVersion: '3.1.201'
  NUGET_PACKAGES: '$(Pipeline.Workspace)/.nuget/packages'

jobs:
- job: linux_build
  displayName: 'Linux Build'
  pool:
    vmimage: 'ubuntu-latest'
  steps:
  - template: '.ci/build-steps.yml'

- job: windows_build
  displayName: 'Windows Build'
  pool:
    vmimage: 'windows-latest'
  steps:
  - template: '.ci/build-steps.yml'
  - task: DotNetCoreCLI@2
    displayName: 'Publish SideBySide (net472)'
    inputs:
      command: 'publish'
      arguments: '-c Release -f net472 tests/SideBySide/SideBySide.csproj'
      publishWebProjects: false
      zipAfterPublish: false
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'SideBySide-net472-$(Agent.OS)'
      targetPath: 'tests/SideBySide/bin/Release/net472/publish'

- job: windows_baseline
  displayName: 'Baseline'
  pool:
    vmimage: 'windows-latest'
  steps:
  - template: '.ci/install-mysql-windows.yml'
  - task: CopyFiles@2
    displayName: 'Copy config.json'
    inputs:
      sourceFolder: '.ci/config'
      contents: 'config.json'
      targetFolder: 'tests/SideBySide'
  - task: UseDotNet@2
    displayName: 'Install .NET Core'
    inputs:
      version: $(DotNetCoreSdkVersion)
  - task: DotNetCoreCLI@2
    displayName: 'Restore packages'
    inputs:
      command: 'restore'
      arguments: 'tests\MySqlConnector.Tests\MySqlConnector.Tests.csproj /p:Configuration=Baseline'
      verbosityRestore: 'minimal'
  - task: DotNetCoreCLI@2
    displayName: 'Unit tests'
    inputs:
      command: 'test'
      arguments: 'tests\MySqlConnector.Tests\MySqlConnector.Tests.csproj -c Baseline'
  - task: DotNetCoreCLI@2
    displayName: 'Restore packages'
    inputs:
      command: 'restore'
      arguments: 'tests\SideBySide\SideBySide.csproj /p:Configuration=Baseline'
      verbosityRestore: 'minimal'
  - task: DotNetCoreCLI@2
    displayName: 'Baseline tests'
    inputs:
      command: 'test'
      arguments: 'tests\SideBySide\SideBySide.csproj -c Baseline --logger'
    env:
      DATA__UNSUPPORTEDFEATURES: 'Ed25519,UnixDomainSocket'
      DATA__CONNECTIONSTRING: 'server=localhost;port=3306;user id=root;password=test;database=mysqltest;ssl mode=none;DefaultCommandTimeout=3600'
      DATA__CERTIFICATESPATH: '$(Build.Repository.LocalPath)\.ci\server\certs\'
      DATA__MYSQLBULKLOADERLOCALCSVFILE: '$(Build.Repository.LocalPath)\tests\TestData\LoadData_UTF8_BOM_Unix.CSV'
      DATA__MYSQLBULKLOADERLOCALTSVFILE: '$(Build.Repository.LocalPath)\tests\TestData\LoadData_UTF8_BOM_Unix.TSV'
      TF_BUILD: $(TF_BUILD)
  - task: PublishTestResults@2
    condition: always()
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: '**/*.trx'
      testRunTitle: 'Baseline Tests'
      failTaskOnFailedTests: true

- job: linux_unit_tests
  dependsOn: linux_build
  displayName: 'Linux Unit Tests'
  pool:
    vmimage: 'ubuntu-latest'
  steps:
  - template: '.ci/mysqlconnector-tests-steps.yml'

- job: windows_unit_tests
  dependsOn: windows_build
  displayName: 'Windows Unit Tests'
  pool:
    vmimage: 'windows-latest'
  steps:
  - template: '.ci/mysqlconnector-tests-steps.yml'

- job: windows_integration_tests
  dependsOn: windows_build
  displayName: 'Windows Integration Tests'
  pool:
    vmimage: 'windows-latest'
  steps:
  - template: '.ci/install-mysql-windows.yml'
  - task: UseDotNet@2
    displayName: 'Install .NET Core'
    inputs:
      version: $(DotNetCoreSdkVersion)
  - template: '.ci/conformance-test-steps.yml'
    parameters:
      image: 'mysql:8.0'
      connectionString: 'server=localhost;port=3306;user id=mysqltest;password=test;database=conformance;ssl mode=none;DefaultCommandTimeout=3600;AllowPublicKeyRetrieval=True'
  - template: '.ci/sidebyside-test-steps.yml'
    parameters:
      image: 'mysql:8.0'
      unsupportedFeatures: 'Ed25519,Tls11,UnixDomainSocket'
      connectionString: 'server=localhost;port=3306;user id=mysqltest;password=test;database=mysqltest;ssl mode=none;DefaultCommandTimeout=3600;AllowPublicKeyRetrieval=True'
      platform: 'netcoreapp3.0'
      description: 'No SSL'
  - template: '.ci/sidebyside-test-steps.yml'
    parameters:
      image: 'mysql:8.0'
      unsupportedFeatures: 'Ed25519,Tls11,UnixDomainSocket'
      connectionString: 'server=localhost;port=3306;user id=mysqltest;password=test;database=mysqltest;ssl mode=none;UseCompression=True;DefaultCommandTimeout=3600;AllowPublicKeyRetrieval=True'
      platform: 'netcoreapp3.0'
      description: 'Compression, No SSL'

- job: linux_integration_tests
  dependsOn: linux_build
  displayName: 'Linux Tests'
  pool:
    vmimage: 'ubuntu-latest'
  strategy:
    matrix:
      'MySQL 5.6':
        image: 'mysql:5.6'
        unsupportedFeatures: 'Ed25519,Json,Sha256Password,LargePackets,CachingSha2Password,SessionTrack,Tls13,UuidToBin'
      'MySQL 5.7':
        image: 'mysql:5.7'
        unsupportedFeatures: 'Ed25519,CachingSha2Password,Tls13,UuidToBin'
      'MySQL 8.0':
        image: 'mysql:8.0'
        unsupportedFeatures: 'Ed25519,Tls11'
      'Percona 5.7':
        image: 'percona:5.7.22'
        unsupportedFeatures: 'CachingSha2Password,Ed25519,Tls13,UuidToBin'
      'MariaDB 10.2':
        image: 'mariadb:10.2'
        unsupportedFeatures: 'Ed25519,Json,Sha256Password,CachingSha2Password,RoundDateTime,UuidToBin'
      'MariaDB 10.3':
        image: 'mariadb:10.3'
        unsupportedFeatures: 'Ed25519,Json,Sha256Password,CachingSha2Password,RoundDateTime,UuidToBin'
      'MariaDB 10.4':
        image: 'mariadb:10.4'
        unsupportedFeatures: 'Json,Sha256Password,CachingSha2Password,RoundDateTime,UuidToBin'
  steps:
  - template: '.ci/integration-tests-steps.yml'
    parameters:
      image: $(image)
      unsupportedFeatures: $(unsupportedFeatures)
      DotNetCoreSdkVersion: $(DotNetCoreSdkVersion)

- job: windows_coverage
  displayName: 'Windows Coverage'
  pool:
    vmimage: 'windows-latest'
  variables:
    disable.coverage.autogenerate: 'true'
  steps:
  - template: '.ci/install-mysql-windows.yml'
  - task: CopyFiles@2
    displayName: 'Copy config.json'
    inputs:
      sourceFolder: '.ci/config'
      contents: 'config.json'
      targetFolder: 'tests/SideBySide'
  - task: UseDotNet@2
    displayName: 'Install .NET Core'
    inputs:
      version: $(DotNetCoreSdkVersion)
  - task: DotNetCoreCLI@2
    displayName: 'Install coverlet'
    inputs:
      command: 'custom'
      custom: 'add'
      arguments: 'tests\SideBySide\SideBySide.csproj package coverlet.collector'
  - task: DotNetCoreCLI@2
    displayName: 'Run SideBySide tests'
    inputs:
      command: 'test'
      projects: 'tests\SideBySide\SideBySide.csproj'
      arguments: '--configuration Release --framework netcoreapp3.0 --collect "XPlat Code Coverage" -r $(Agent.TempDirectory)/'
    env:
      DATA__UNSUPPORTEDFEATURES: 'Ed25519,Tls11,UnixDomainSocket'
      DATA__CONNECTIONSTRING: 'server=localhost;port=3306;user id=mysqltest;password=test;database=mysqltest;ssl mode=none;DefaultCommandTimeout=3600;AllowPublicKeyRetrieval=True'
  - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
    displayName: Generate Code Coverage Report
    inputs:
      reports: $(Agent.TempDirectory)/*.cobertura.xml
      targetdir: $(build.artifactstagingdirectory)/TestResults/
      reporttypes: 'HtmlInline_AzurePipelines;Cobertura;Badges'
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish Code Coverage Results'
    inputs:
      codeCoverageTool: cobertura
      summaryFileLocation: $(build.artifactstagingdirectory)/TestResults/cobertura.xml
      reportDirectory: '$(build.artifactstagingdirectory)/TestResults'
